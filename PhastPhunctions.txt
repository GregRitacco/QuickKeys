** Phast Phunctions Version 3
Let version = 20220105

Proc FindAllMotors
Echo Make roster of all engines.

Let pAssign = ""
Let pRoster = $Ops(find, Cars.AAR, "ES*", Car),$Ops(find, Cars.AAR, "ED*", Car),$Ops(find, Cars.AAR, "EP*", Car),$Ops(find, Cars.AAR, "EE*", Car)
Let pRoster = $Set(@pRoster, Sort)

Let i = 0
While(i < $Set(@pRoster, Count))
  Let pTemp = $Set(@pRoster, Get, @i)
  Let pK = \n$Set(@xMessageSet, Get, 7) $Set(@pRoster, Get, @i) $Set(@xMessageSet, Get, 6) ** Locomotive XX is not assigned a Function key
  If($Car(@ptemp, Phast) <> "")
    Let pK = \n$Set(@xMessageSet, Get, 7) $Set(@pRoster, Get, @i) $Set(@xMessageSet, Get, 5) $Car(@pTemp, Phast) ** Locomotive XX is assigned to function key FXX
  EndIf
  Let pAssign = @pAssign + @pK
  Let i = @i + 1
EndWhile

EndProc
***************************************************************************

Proc TagLocoLabels
Echo Edit engine labels.

Let pTestCar = $Car($Car, Label)
Let pOldKey = $Car($Car, Phast)


If($Set(@pRoster, Contains, @pTestCar) = 1) ** The selected car must be an engine
  ** Step 1a, Release the tag from the selected engine
  Let pNewLabel = @pTestCar
  Let pNewLabel = $String(@pNewLabel, NextToken, "*")
  Let $Car(@pTestCar, Label) = @pNewLabel
  Call FindAllMotors ** Update the loco roster
  ** Step 1b - Release the selected function key and label from any other engine
  Let i = 0
  While(i < $Set(@pRoster, Count))
    Let pTemp = $Set(@pRoster, Get, @i)
    If ($Car(@pTemp, Phast) = @pNewKey)
      Let $Car(@pTemp, Phast) = ""
      Let pLabel = $Car(@pTemp, Label)
      Let pLabel = $String(@pLabel, NextToken, "*")
      Let $Car(@pTemp, Label) = @pLabel
      Echo Engine @pLabel released from key @pKey
    Endif
    Let i = @i + 1
  EndWhile

  ** Step 2 - Attach the function key to the locomotive
  If(@pNewKey <> @pOldKey)
    Call FindAllMotors
    Let $Car($Car, Phast) = @pNewKey
    Let pLabel = $Car($Car, Label) + "*" + @pNewKey + "*"
    Let $Car($Car, Label) = @pLabel
  EndIf
Else
  Let pMessage = $Set(@xMessageSet, Get, 9)
  Call $MsgBox(@pMessage)
Endif
Note

EndProc
***************************************************************************

Proc ShowMotors
Echo Show labels for engines.

Let pTrain = $Train
Let i = 0
While(i < $Set(@pRoster, Count))
  Let pTemp = $Set(@pRoster, Get , @i)
  Train @pTemp
  Train Car @pTemp
  Car "Show car ID"
  If(@x5 = 1)
    Let $Car(@pTemp, Dest) = ""
  EndIf
  Let i = @i + 1
EndWhile
Train @pTrain
View Refresh

EndProc
***************************************************************************

Proc HideMotors
Echo Show labels for engines.

Let pTrain = $Train
Let i = 0
While(i < $Set(@pRoster, Count))
  Let pTemp = $Set(@pRoster, Get , @i)
  Train @pTemp
  Train Car @pTemp
  Car "Show car ID"
  If(@x5 = 1)
    Let $Car(@pTemp, Dest) = "~"
  EndIf
  Let i = @i + 1
EndWhile
Train @pTrain
View Refresh

EndProc
***************************************************************************

If (%1 = SetUp)

  Let x4 = 1
  Let xMatrix = @x0,@x1,@x2,@x3,@x4,@x5,@x6,@x7
  Let pProgramMode = 0
  Call FindAllMotors

  Echo PhastPhunctions @version
EndIf
***************************************************************************

If($Set(@xMatrix, Get, 0) = 1) ** All QK are active
If($Set(@xMatrix, Get, 4) = 1)


  If ($Key >= 112) ** the keys F1 thru F9
  If ($Key <= 120)

    Let pNewKey = "F" + ($Key - 111)
    If(@pProgramMode = 1) ** Program the motor
      Call TagLocoLabels
      Call FindAllMotors
      Call HideMotors
      Let pProgramMode = 0
      Note
    Else ** zoom to locoomotive
      Let i = 0
      While(i < $Set(@pRoster, Count))
        Let pTemp = $Set(@pRoster, Get , @i)
        If($Car(@pTemp, Phast) = @pNewKey)
          Train @pTemp
          Train Car @pTemp
          Car "zoom to"
        EndIf
      Let i = @i + 1
      EndWhile
    EndIf

  EndIf
  EndIf
  ***************************************************************************

  If($Key = 80) ** key p for program

    If (@pProgramMode = 0)
      Let pProgramMode = 1
      Call FindAllMotors
      Call ShowMotors
      Let pNote = $Set(@xMessageSet, Get, 8) \n@pAssign \n
      Call NoteWindow @pNote 1
      Let P = 1
      Let T = 0
      Echo Programming mode on
    Else
      Let pProgramMode = 0
      Let P = 0
      Let T = 1
      Call HideMotors
      Echo Programming mode off
      Call NoteWindow
    EndIf
    Let H = 0
    Let U = 0
    Let L = 0

  EndIf
  ***************************************************************************

  If ($Key = 72) ** key h for help

    If(@pProgramMode = 1)
      Let pProgramMode = 0
      Call HideMotors
      Echo Programming mode off
      Let P = 0
    EndIf
  EndIf
  ***************************************************************************

  If ($Key = 85) ** key u for utilities

    If(@pProgramMode = 1)
      Let pProgramMode = 0
      Call HideMotors
      Let P = 0
      Echo Programming mode off
    EndIf
  EndIf
  ***************************************************************************

  If($Key = 73) ** Key i for ID

    Let pTemp = $Car
    If($String(@pRoster, Contains, @pTemp) = 1)
      If(@x5 = 0)
        Car "Show Car ID"
      EndIf
      If(@x5 = 1)
        If($Car(@pTemp, Dest) = "~")
          Let $Car(@pTemp, Dest) = ""
        Else
          Let $Car(@pTemp, Dest) = "~"
        EndIf
      EndIf
    EndIf
    View Refresh
  EndIf
  ***************************************************************************

EndIf
EndIf
***************************************************************************
